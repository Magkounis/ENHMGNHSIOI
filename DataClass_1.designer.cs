#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace enhmgnhsioi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test")]
	public partial class DataClass_1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGNHSIOI(GNHSIOI instance);
    partial void UpdateGNHSIOI(GNHSIOI instance);
    partial void DeleteGNHSIOI(GNHSIOI instance);
    #endregion
		
		public DataClass_1DataContext() : 
				base(global::enhmgnhsioi.Properties.Settings.Default.TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClass_1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClass_1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClass_1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClass_1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NEOAPO> NEOAPOs
		{
			get
			{
				return this.GetTable<NEOAPO>();
			}
		}
		
		public System.Data.Linq.Table<GNHSIOI> GNHSIOIs
		{
			get
			{
				return this.GetTable<GNHSIOI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEOAPO")]
	public partial class NEOAPO
	{
		
		private string _KODAN;
		
		private string _NEWKODAN;
		
		public NEOAPO()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KODAN", DbType="Char(21) NOT NULL", CanBeNull=false)]
		public string KODAN
		{
			get
			{
				return this._KODAN;
			}
			set
			{
				if ((this._KODAN != value))
				{
					this._KODAN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEWKODAN", DbType="Char(21) NOT NULL", CanBeNull=false)]
		public string NEWKODAN
		{
			get
			{
				return this._NEWKODAN;
			}
			set
			{
				if ((this._NEWKODAN != value))
				{
					this._NEWKODAN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GNHSIOI")]
	public partial class GNHSIOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KODAN;
		
		private string _PRO;
		
		private string _GNHKODAN;
		
		private decimal _recno = default(decimal);
		
		private string _MARKSOURCE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKODANChanging(string value);
    partial void OnKODANChanged();
    partial void OnPROChanging(string value);
    partial void OnPROChanged();
    partial void OnGNHKODANChanging(string value);
    partial void OnGNHKODANChanged();
    partial void OnMARKSOURCEChanging(string value);
    partial void OnMARKSOURCEChanged();
    #endregion
		
		public GNHSIOI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KODAN", DbType="Char(21) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KODAN
		{
			get
			{
				return this._KODAN;
			}
			set
			{
				if ((this._KODAN != value))
				{
					this.OnKODANChanging(value);
					this.SendPropertyChanging();
					this._KODAN = value;
					this.SendPropertyChanged("KODAN");
					this.OnKODANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO", DbType="Char(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PRO
		{
			get
			{
				return this._PRO;
			}
			set
			{
				if ((this._PRO != value))
				{
					this.OnPROChanging(value);
					this.SendPropertyChanging();
					this._PRO = value;
					this.SendPropertyChanged("PRO");
					this.OnPROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GNHKODAN", DbType="Char(21) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GNHKODAN
		{
			get
			{
				return this._GNHKODAN;
			}
			set
			{
				if ((this._GNHKODAN != value))
				{
					this.OnGNHKODANChanging(value);
					this.SendPropertyChanging();
					this._GNHKODAN = value;
					this.SendPropertyChanged("GNHKODAN");
					this.OnGNHKODANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recno", DbType="Decimal(20,0) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal recno
		{
			get
			{
				return this._recno;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKSOURCE", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MARKSOURCE
		{
			get
			{
				return this._MARKSOURCE;
			}
			set
			{
				if ((this._MARKSOURCE != value))
				{
					this.OnMARKSOURCEChanging(value);
					this.SendPropertyChanging();
					this._MARKSOURCE = value;
					this.SendPropertyChanged("MARKSOURCE");
					this.OnMARKSOURCEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
